above10 <- function(x) {
use <- x >10
x[use]
}
above10(x <- 1:20)
x
above10 <- function(x) {
use <- x >10
x[use]
}
above10(x <- 1:20)
above10(x <- 1:20 , 15)
aboven <- function(x, n = 10) {  # n = 10 says that 10 is a default value if user doesnt enter any 2nd parameter
use <- x > n
x[use]
}
aboven(x <- 1:20 , 15)
x
aboven(x <- 1:20)
x <- Sys.time()
x
p <- as.POSIXlt(x)
names(unclass(p))
p$sec
p$sec
p$sec
p$sec
p$sec
unclass(x)
datestring <- c("January 10, 2016 10:40", "February 5, 2016 9:10")
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
x <- strptime("9 Jan 2011 11:34:21", "%d %b %Y %H:%M:%S")
y <- as.Data("2012-01-01")
y <- as.Date("2012-01-01")
y-x
y <- as.POSIXlt(y)
y-x
x <- as.POSIXct("2016-01-05 01:00:00")
y <- as.POSIXct("2016-01-05 01:00:00", tz = "GMT")
y-x
library(swirl)
ls()
rm(list=ls())
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6 <7
10<=10
5!=7
5==7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
| c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
ints>7
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2, 4, 5))
swirl()
swirl()
swirl()
q
q
q
q
q
quit
exit
